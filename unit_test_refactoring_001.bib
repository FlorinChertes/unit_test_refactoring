
@book{BecAnd04extreme,
  added-at = {2015-08-04T15:30:35.000+0200},
  address = {Boston},
  author = {Beck, Kent and Andres, Cynthia},
  biburl = {https://www.bibsonomy.org/bibtex/25a0de786b7be8a2452c7d596172209ee/xaavian},
  description = {Extreme Programming Explained, second edition},
  interhash = {a9b68fa00c6e5da6bdc8dd7e848aa2e5},
  intrahash = {5a0de786b7be8a2452c7d596172209ee},
  isbn = {0321278658},
  keywords = {extreme programming},
  publisher = {Addison-Wesley Professional},
  timestamp = {2015-08-04T15:45:20.000+0200},
  title = {Extreme Programming Explained: Embrace Change (2nd Edition)},
  url = {http://portal.acm.org/citation.cfm?id=1076267},
  year = 2004
}

@book{beck2001planning,
  title={Planning Extreme Programming},
  author={Beck, K. and Fowler, M.},
  series={XP series},
  url={https://books.google.at/books?id=9T63jwEACAAJ},
  year={2001},
  publisher={Addison-Wesley}
}

@book{FeathersMichael,
  author = {Feathers, Michael},
  title = {Working Effectively with Legacy Code},
  year = {2004},
  isbn = {0131177052},
  publisher = {Prentice Hall PTR},
  address = {USA}
}

@misc{WEBSITE:WhereDidItAllGoWrong,
	title = {Ian Cooper Where Did It All Go Wrong},
	howpublished = {https://www.youtube.com/watch?v=EZ05e7EMOLM}
}

@misc{WEBSITE:TDDisdead,
	title = {David Heinemeier Hansson TDD is dead. Long live testing.},
	howpublished = {https://dhh.dk/2014/tdd-is-dead-long-live-testing.html}
}

@misc{WEBSITE:UnitTestIsWaste,
	title = {James Coplien Why Most Unit Testing is Waste},
	howpublished = {https://rbcs-us.com/documents/Why-Most-Unit-Testing-is-Waste.pdf}
}


@book{beck2002driven,
  added-at = {2010-11-23T14:22:43.000+0100},
  asin = {0321146530},
  author = {Beck, Kent},
  biburl = {https://www.bibsonomy.org/bibtex/293ecb16d97b64f51a8cb72ab54dca15a/schmidt2},
  description = {Test Driven Development. By Example Addison-Wesley Signature: Amazon.de: Kent Beck: Englische Bücher},
  dewey = {005.14},
  ean = {9780321146533},
  interhash = {ce3a9459ac3d0b3d47518f186cae5809},
  intrahash = {93ecb16d97b64f51a8cb72ab54dca15a},
  isbn = {0321146530},
  keywords = {addison-wesley books kent_beck},
  publisher = {Addison-Wesley Longman, Amsterdam},
  timestamp = {2011-07-19T11:31:41.000+0200},
  title = {Test Driven Development. By Example (Addison-Wesley Signature)},
  year = 2002
}

@article{ TestDrivenDevelopmentReallyImproveSoftwareDesign,
        title={ Does Test-Driven Development Really Improve Software Design Quality? },
        authors={ David S. Janzen and Hossein Saiedian },
        journal={ IEEE Software },
        year={ 2008 },
        publisher={ IEEE Computer Society },
        volume={ 25 },
        pages={ 77-84 },
        number={ 2 },
        
        
        doi={ 10.1109/MS.2008.34 },  
      }


@article{TestDrivenDevelopmentConceptsTaxonomy,
author = {Janzen, David and Saiedian, Hossein},
title = {Test-Driven Development: Concepts, Taxonomy, and Future Direction},
year = {2005},
issue_date = {September 2005},
publisher = {IEEE Computer Society Press},
address = {Washington, DC, USA},
volume = {38},
number = {9},
issn = {0018-9162},
url = {https://doi.org/10.1109/MC.2005.314},
doi = {10.1109/MC.2005.314},
abstract = {Test-driven development creates software in very short iterations with minimal upfront design. Poised for widespread adoption TDD has become the focus of an increasing number of researchers and developers.},
journal = {Computer},
month = {sep},
pages = {43–50},
numpages = {8},
keywords = {extreme programming, software development, test-driven development, iterative software development}
}

@inproceedings{DoesTestDrivenDevelopmentImprovetheProgramCode,
author="Siniaalto, Maria
and Abrahamsson, Pekka",
editor="Meyer, Bertrand
and Nawrocki, Jerzy R.
and Walter, Bartosz",
title="Does Test-Driven Development Improve the Program Code? Alarming Results from a Comparative Case Study",
booktitle="Balancing Agility and Formalism in Software Engineering",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="143--156",
abstract="It is suggested that test-driven development (TDD) is one of the most fundamental practices in agile software development, which produces loosely coupled and highly cohesive code. However, how the TDD impacts on the structure of the program code have not been widely studied. This paper presents the results from a comparative case study of five small scale software development projects where the effect of TDD on program design was studied using both traditional and package level metrics. The empirical results reveal that an unwanted side effect can be that some parts of the code may deteriorate. In addition, the differences in the program code, between TDD and the iterative test-last development, were not as clear as expected. This raises the question as to whether the possible benefits of TDD are greater than the possible downsides. Moreover, it additionally questions whether the same benefits could be achieved just by emphasizing unit-level testing activities.",
isbn="978-3-540-85279-7"
}
